stages:
  - test
  - documentation
  - deploy
  - sourcepackage
  - packages

variables:
  LANG: en_US.UTF-8
  BUILD_IMAGES_PROJECT: kiwi3/kiwi-ci-containers
  TUMBLEWEED_BUILD: buildenv-tumbleweed
  FEDORA_BUILD: buildenv-fedora

code_style:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  stage: test
  script:
    - tox -e check
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .tox/3

unit_py36:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  stage: test
  script:
    - export PYTHON=python3.6
    - tox -e unit_py3_6 "-n $(nproc)"
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .tox/3.6

unit_py37:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  stage: test
  script:
    - export PYTHON=python3.7
    - tox -e unit_py3_7 "-n $(nproc)"
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .tox/3.7

build_doc:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$TUMBLEWEED_BUILD
  stage: documentation
  script:
    - tox -e packagedoc
  artifacts:
    paths:
      - doc/build/
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - doc/build

build_suse_doc:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$TUMBLEWEED_BUILD
  stage: documentation
  script:
    - tox -e doc_suse
  artifacts:
    paths:
      - doc/build/

push_suse_doc:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$TUMBLEWEED_BUILD
  stage: deploy
  only:
    - master
  script:
    - "export GIT_SSH=$(pwd)/run_ssh"
    - "export ID_DOC_SUSE=$(pwd)/id_doc_suse"
    - echo 'exec ssh -o StrictHostKeyChecking=no -i $ID_DOC_SUSE "$@"' > run_ssh
    - chmod u+x run_ssh
    - base64 --decode "$DOC_SUSE_SECRET" > id_doc_suse
    - chmod 600 id_doc_suse
    - git clone git@github.com:OSInside/kiwi-suse-doc.git /tmp/kiwi-suse-doc
    - cp doc/DC-kiwi /tmp/kiwi-suse-doc/doc/build
    - cp doc/source/.images/* /tmp/kiwi-suse-doc/doc/build/images/src/png
    - cp doc/build/xml/book.xml /tmp/kiwi-suse-doc/doc/build/xml
    - git config --global user.email "kiwi-internal@suse.de"
    - git config --global user.name "SUSE KIWI Team"
    - cd /tmp/kiwi-suse-doc
    - git add .
    - git commit -a -m "upstream sync" && git push || true
  dependencies:
    - build_suse_doc

rpm_source_package:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  stage: sourcepackage
  script:
    - groupadd -f -g 135 -r mock # workaround RHBZ#1740545
    - 'sed -i "s|build: clean tox|build:|" Makefile'
    - make build
    - mv dist/python-kiwi.spec .
    - rm dist/python-kiwi.changes
    - >
      mock
      --isolation=simple -r /etc/mock/fedora-30-x86_64.cfg
      --buildsrpm --sources ./dist
      --resultdir $(pwd)/mock-result-srpm
      --spec ./python-kiwi.spec 2>&1 | tee srpm_build_out
  artifacts:
    when: always
    paths:
      - srpm_build_out
      - mock-result-srpm
    expire_in: 1 week

rpm_fedora_30:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  stage: packages
  script:
    - "export SRC_RPM=$(ls mock-result-srpm/*kiwi*)"
    - cp $SRC_RPM .
    - >
      mock
      --isolation=simple
      --resultdir $(pwd)/mock-result-fedora
      -r /etc/mock/fedora-30-x86_64.cfg $(basename $SRC_RPM)
  artifacts:
    when: always
    paths:
      - mock-result-fedora
    expire_in: 1 week
  dependencies:
    - rpm_source_package

rpm_suse_TW:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  stage: packages
  script:
    - "export SRC_RPM=$(ls mock-result-srpm/*kiwi*)"
    - cp $SRC_RPM .
    - >
      mock
      --isolation=simple
      --resultdir $(pwd)/mock-result-tw
      -r /etc/mock/opensuse-tumbleweed-x86_64.cfg $(basename $SRC_RPM)
  artifacts:
    when: always
    paths:
      - mock-result-tw
    expire_in: 1 week
  allow_failure: true
  dependencies:
    - rpm_source_package
